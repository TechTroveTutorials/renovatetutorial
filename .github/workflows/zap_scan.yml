name: OWASP ZAP Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Start application with Docker Compose
        run: docker-compose up -d

      # - name: Wait for application to become healthy
      #   run: |
      #     until [ "$(docker inspect --format='{{json .State.Health.Status}}' $(docker-compose ps -q webapp))" == "\"healthy\"" ]; do
      #       echo "Waiting for webapp service to be healthy..."
      #       sleep 10
      #     done

      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://localhost:80'
          format: 'openapi'
          openapi_file_url: 'http://localhost:80/swagger.json' # Adjust based on your app's OpenAPI spec URL
          cmd_options: "-T 60  -z '-addoninstallall'"
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'

     # Uploads results.sarif to GitHub repository using the upload-sarif action
      # - uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     # Path to SARIF file relative to the root of the repository
      #     sarif_file: results.sarif
      # - name: Create sarif file from zaproxy results
      #   uses: SvanBoxel/zaproxy-to-ghas@main

      # - name: Convert ZAP report to SARIF
      #   uses: zaproxy/action-report-sarif@v0.2.0
      #   with:
      #     input_file: 'owasp_zap_report.json'
      #     output_file: 'owasp_zap_report.sarif'

      # - name: Upload SARIF file to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: 'owasp_zap_report.sarif'

      - name: Shutdown Docker Compose
        if: always()
        run: docker-compose down
